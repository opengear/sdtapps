/*
 * AddHostDialog.java
 *
 * Created on January 15, 2006, 9:20 PM
 */

package sdtconnector;

import com.opengear.util.IconLoader;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JCheckBox;
import javax.swing.text.JTextComponent;


public class AddHostDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    
    /** Creates new form AddHostDialog */
    public AddHostDialog(java.awt.Frame parent, boolean modal, Host host) {
        super(parent, modal);
        initComponents();
        this.host = host;
        nameField.setText(host.getName());
        hostField.setText(host.getAddress());
        
        for (Object o : SDTManager.getServiceList()) {
            Service s = (Service) o;
            javax.swing.JCheckBox serviceCheckBox = new javax.swing.JCheckBox();
            serviceCheckBox.setText(s.toString());
            serviceCheckBox.setActionCommand(String.valueOf(s.getRecordID()));
            serviceCheckBox.setSelected(host.hasService(s));
            servicesPanel.add(serviceCheckBox);
            pack();
        }
        descriptionField.setText(host.getDescription());
        KeyListener keyListener = new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                switch (evt.getKeyCode()) {
                    // case KeyEvent.VK_CANCEL:
                    case KeyEvent.VK_ESCAPE:
                        evt.consume();
                        doClose(RET_CANCEL);
                        break;
                    case KeyEvent.VK_ENTER:
                        evt.consume();
                        doClose(RET_OK);
                        break;
                }
            }
        };
        
        addKeyListener(keyListener);
        hostField.addKeyListener(keyListener);
        //descriptionField.addKeyListener(keyListener);
        okButton.setIcon(IconLoader.getButtonIcon("ok"));
        cancelButton.setIcon(IconLoader.getButtonIcon("cancel"));
        //
        // Make it so the contents of text fields are selected when they are clicked
        //
        FocusListener focus = new FocusListener() {
            public void focusGained(FocusEvent evt) {
                ((JTextComponent) evt.getSource()).selectAll();
            }
            public void focusLost(FocusEvent evt) {
                ((JTextComponent) evt.getSource()).select(0, 0);
            }
        };
        
        hostField.addFocusListener(focus);
        //descriptionField.addFocusListener(focus);
    }
    
    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        hostField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        descLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        servicesPanel = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Host Address");

        okButton.setText("OK");
        okButton.setIconTextGap(6);
        okButton.setMargin(new java.awt.Insets(2, 7, 2, 14));
        okButton.setMaximumSize(new java.awt.Dimension(46, 25));
        okButton.setMinimumSize(new java.awt.Dimension(46, 25));
        okButton.setNextFocusableComponent(cancelButton);
        okButton.setPreferredSize(new java.awt.Dimension(46, 25));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        descLabel.setText("Description/Notes");

        descriptionField.setColumns(20);
        descriptionField.setRows(3);
        descriptionField.setNextFocusableComponent(okButton);
        jScrollPane1.setViewportView(descriptionField);

        cancelButton.setText("Cancel");
        cancelButton.setIconTextGap(6);
        cancelButton.setMargin(new java.awt.Insets(2, 7, 2, 14));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Services");

        servicesPanel.setLayout(new java.awt.GridLayout(0, 2, 5, 0));

        servicesPanel.setPreferredSize(new java.awt.Dimension(50, 15));

        jLabel3.setText("Descriptive Name");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel1)
                            .add(descLabel)
                            .add(jLabel3)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(servicesPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, nameField)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, hostField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton)))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {cancelButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(hostField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(servicesPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(descLabel))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {hostField, jLabel1}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {
        doClose(RET_CANCEL);
    }
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
        if (retStatus == RET_OK) {
            host.setName(nameField.getText());
            host.setAddress(hostField.getText());
            host.setDescription(descriptionField.getText());
            host.clearServiceList();
            for (Object o : servicesPanel.getComponents()) {
                javax.swing.JCheckBox checkBox = (JCheckBox) o;
                if (checkBox.isSelected()) {
                    host.addService(Integer.parseInt(checkBox.getActionCommand()));
                }
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel descLabel;
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JTextField hostField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel servicesPanel;
    // End of variables declaration//GEN-END:variables
    
    private javax.swing.JCheckBox aCheckBox;
    private javax.swing.JLabel aLabel;
    
    private int returnStatus = RET_CANCEL;
    private Host host;
}
